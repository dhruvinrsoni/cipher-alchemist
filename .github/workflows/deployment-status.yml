name: 📊 Deployment Status

on:
  workflow_dispatch:
    inputs:
      detailed_report:
        description: 'Generate detailed report'
        required: false
        default: true
        type: boolean
      custom_url:
        description: 'Custom URL to check (optional)'
        required: false
        type: string
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours

jobs:
  health-check:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    # ✅ NEW: Dynamic job name with IST timestamp
    name: Health Check - ${{ format('{0}', github.run_id) }}
    
    steps:
      - name: 🛒 Checkout Repository
        uses: actions/checkout@v4

      - name: 🕐 Set IST Timestamp
        id: timestamp
        run: |
          IST_TIME=$(TZ='Asia/Kolkata' date '+%Y-%m-%d %H:%M:%S IST')
          IST_SHORT=$(TZ='Asia/Kolkata' date '+%m/%d %H:%M IST')
          echo "ist_time=${IST_TIME}" >> $GITHUB_OUTPUT
          echo "ist_short=${IST_SHORT}" >> $GITHUB_OUTPUT
          echo "📅 Current IST Time: ${IST_TIME}"

      - name: 🔍 Check Demo Status
        id: demo_check
        run: |
          # ✅ FIXED: Use custom URL if provided, otherwise default
          if [ -n "${{ github.event.inputs.custom_url }}" ]; then
            DEMO_URL="${{ github.event.inputs.custom_url }}"
          else
            DEMO_URL="https://dhruvinrsoni.github.io/cipher-alchemist/"
          fi
          
          echo "🔍 Checking URL: $DEMO_URL"
          
          # ✅ ENHANCED: Multiple check types
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$DEMO_URL" || echo "000")
          RESPONSE_TIME=$(curl -s -o /dev/null -w "%{time_total}" "$DEMO_URL" || echo "0")
          
          if [ "$HTTP_STATUS" = "200" ]; then
            echo "status=✅ Online (${HTTP_STATUS})" >> $GITHUB_OUTPUT
            echo "response_time=${RESPONSE_TIME}s" >> $GITHUB_OUTPUT
          else
            echo "status=❌ Offline (${HTTP_STATUS})" >> $GITHUB_OUTPUT
            echo "response_time=N/A" >> $GITHUB_OUTPUT
          fi
          
          echo "url=$DEMO_URL" >> $GITHUB_OUTPUT
          echo "http_status=$HTTP_STATUS" >> $GITHUB_OUTPUT

      - name: 📊 Generate Status Report
        if: ${{ github.event.inputs.detailed_report == 'true' || github.event_name == 'schedule' }}
        run: |
          # ✅ FIXED: Check if STATUS_REPORT.md exists, create if not
          echo "🔍 Checking if STATUS_REPORT.md exists..."
          
          if [ ! -f "STATUS_REPORT.md" ]; then
            echo "📝 STATUS_REPORT.md not found, creating new file..."
            touch STATUS_REPORT.md
          else
            echo "✅ STATUS_REPORT.md already exists, updating..."
          fi
          
          # Generate the status report
          cat > STATUS_REPORT.md << EOF
          # 📊 Cipher Alchemist - Deployment Status
          
          **Generated:** ${{ steps.timestamp.outputs.ist_time }}
          **Trigger:** ${{ github.event_name }}
          **Run ID:** ${{ github.run_id }}
          
          ## 🌐 Live Demo Health
          - **URL:** [${{ steps.demo_check.outputs.url }}](${{ steps.demo_check.outputs.url }})
          - **Status:** ${{ steps.demo_check.outputs.status }}
          - **HTTP Code:** ${{ steps.demo_check.outputs.http_status }}
          - **Response Time:** ${{ steps.demo_check.outputs.response_time }}
          
          ## 📦 Version Information
          - **Current Version:** \$(cat version.txt 2>/dev/null || echo "Unknown")
          - **Latest Tag:** \$(git describe --tags --abbrev=0 2>/dev/null || echo "No tags")
          - **Total Releases:** \$(git tag -l | grep "^v" | wc -l)
          - **Last Commit:** \$(git log -1 --pretty=format:"%h - %s (%cr)")
          
          ## 🔄 Available Versions
          \`\`\`
          \$(git tag -l | grep "^v" | sort -V | tail -5)
          \`\`\`
          
          ## 📋 Recent Activity
          \`\`\`
          \$(git log --oneline -5)
          \`\`\`
          
          ## 📈 Repository Stats
          - **Total Commits:** \$(git rev-list --all --count)
          - **Contributors:** \$(git log --format='%an' | sort -u | wc -l)
          - **Branches:** \$(git branch -r | wc -l)
          
          ## 📊 Check History
          | Check Time | Status | Response Time | HTTP Code |
          |------------|--------|---------------|-----------|
          | ${{ steps.timestamp.outputs.ist_time }} | ${{ steps.demo_check.outputs.status }} | ${{ steps.demo_check.outputs.response_time }} | ${{ steps.demo_check.outputs.http_status }} |
          
          ---
          *Status report generated by GitHub Actions*  
          *Last Updated: ${{ steps.timestamp.outputs.ist_time }}*
          EOF
          
          echo "✅ STATUS_REPORT.md updated successfully"
          
          # Show file size for verification
          ls -la STATUS_REPORT.md

      - name: 💾 Archive Status Report
        if: ${{ github.event.inputs.detailed_report == 'true' || github.event_name == 'schedule' }}
        uses: actions/upload-artifact@v4
        with:
          # ✅ ENHANCED: Include IST timestamp in artifact name
          name: deployment-status-${{ steps.timestamp.outputs.ist_short }}-run${{ github.run_id }}
          path: STATUS_REPORT.md
          retention-days: 30

      # ✅ NEW: Send notification on failure (optional)
      - name: 🚨 Alert on Failure
        if: ${{ steps.demo_check.outputs.http_status != '200' && github.event_name == 'schedule' }}
        run: |
          echo "🚨 ALERT: Demo site is down!"
          echo "URL: ${{ steps.demo_check.outputs.url }}"
          echo "Status: ${{ steps.demo_check.outputs.status }}"
          echo "HTTP Code: ${{ steps.demo_check.outputs.http_status }}"
          echo "Time: ${{ steps.timestamp.outputs.ist_time }}"
          
          # ✅ ENHANCED: Create failure report
          cat > FAILURE_REPORT.md << EOF
          # 🚨 DEPLOYMENT FAILURE ALERT
          
          **Alert Time:** ${{ steps.timestamp.outputs.ist_time }}
          **Trigger:** ${{ github.event_name }}
          
          ## 🔴 Failure Details
          - **URL:** ${{ steps.demo_check.outputs.url }}
          - **Status:** ${{ steps.demo_check.outputs.status }}
          - **HTTP Code:** ${{ steps.demo_check.outputs.http_status }}
          - **Response Time:** ${{ steps.demo_check.outputs.response_time }}
          
          ## 🔧 Recommended Actions
          1. Check GitHub Pages deployment status
          2. Verify DNS configuration
          3. Check for recent commits that might have broken the site
          4. Manual verification: ${{ steps.demo_check.outputs.url }}
          
          ---
          *Failure alert generated by GitHub Actions*
          EOF
          
          # Future: Add Slack/Discord/Email notification here

      - name: 📄 Display Status
        run: |
          echo "📊 Deployment Status Summary"
          echo "============================"
          echo "🕐 Check Time: ${{ steps.timestamp.outputs.ist_time }}"
          echo "🌐 Demo Status: ${{ steps.demo_check.outputs.status }}"
          echo "🔗 Demo URL: ${{ steps.demo_check.outputs.url }}"
          echo "⚡ Response Time: ${{ steps.demo_check.outputs.response_time }}"
          echo "📋 HTTP Code: ${{ steps.demo_check.outputs.http_status }}"
          echo "🏃 Run ID: ${{ github.run_id }}"
          echo "============================"

      # ✅ NEW: Update workflow summary with IST timestamp
      - name: 📋 Update Job Summary
        run: |
          cat >> $GITHUB_STEP_SUMMARY << EOF
          # 📊 Deployment Status - ${{ steps.timestamp.outputs.ist_time }}
          
          ## 🌐 Health Check Results
          | Metric | Value |
          |--------|-------|
          | 🔗 URL | [${{ steps.demo_check.outputs.url }}](${{ steps.demo_check.outputs.url }}) |
          | 📊 Status | ${{ steps.demo_check.outputs.status }} |
          | ⚡ Response Time | ${{ steps.demo_check.outputs.response_time }} |
          | 🔢 HTTP Code | ${{ steps.demo_check.outputs.http_status }} |
          | 🕐 Check Time | ${{ steps.timestamp.outputs.ist_time }} |
          | 🎯 Trigger | ${{ github.event_name }} |
          
          ## 📦 Quick Stats
          - **Current Version:** \$(cat version.txt 2>/dev/null || echo "Unknown")
          - **Latest Tag:** \$(git describe --tags --abbrev=0 2
